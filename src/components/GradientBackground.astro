---
interface Props {
  type?: 'default' | 'radial' | 'mesh' | 'animated' | 'gradient'
  primaryColor?: string
  secondaryColor?: string
  opacity?: number
  className?: string
}

const {
  type = 'default',
  primaryColor = '#5B8BB3',
  secondaryColor = '#A855F7',
  opacity = 0.3,
  className = ''
} = Astro.props
---

{type === 'default' && (
  <div
    class={`pointer-events-none fixed start-0 top-0 z-[-2] h-screen w-full ${className}`}
    style={`background: linear-gradient(135deg, ${primaryColor}${Math.round(opacity * 255).toString(16).padStart(2, '0')}, transparent 50%, ${secondaryColor}${Math.round(opacity * 255).toString(16).padStart(2, '0')}); background-attachment: fixed; background-size: cover; background-repeat: no-repeat; min-height: 100vh;`}
  />
)}

{type === 'radial' && (
  <div
    class={`pointer-events-none fixed start-0 top-0 z-[-2] h-screen w-full ${className}`}
    style={`
      background: 
        radial-gradient(circle at 20% 80%, ${primaryColor}${Math.round(opacity * 255).toString(16).padStart(2, '0')} 0%, transparent 50%),
        radial-gradient(circle at 80% 20%, ${secondaryColor}${Math.round(opacity * 255).toString(16).padStart(2, '0')} 0%, transparent 50%),
        radial-gradient(circle at 40% 40%, ${primaryColor}${Math.round(opacity * 0.5 * 255).toString(16).padStart(2, '0')} 0%, transparent 50%);
      background-attachment: fixed;
      background-size: cover;
      background-repeat: no-repeat;
      min-height: 100vh;
    `}
  />
)}

{type === 'mesh' && (
  <div
    class={`pointer-events-none fixed start-0 top-0 z-[-2] h-screen w-full ${className}`}
    style={`
      background-image: 
        radial-gradient(circle at 25% 25%, ${primaryColor}${Math.round(opacity * 255).toString(16).padStart(2, '0')} 0%, transparent 50%),
        radial-gradient(circle at 75% 75%, ${secondaryColor}${Math.round(opacity * 0.7 * 255).toString(16).padStart(2, '0')} 0%, transparent 50%),
        radial-gradient(circle at 50% 50%, ${primaryColor}${Math.round(opacity * 0.5 * 255).toString(16).padStart(2, '0')} 0%, transparent 50%);
      background-attachment: fixed;
      background-size: cover;
      background-repeat: no-repeat;
      min-height: 100vh;
    `}
  />
)}

{type === 'animated' && (
  <div
    class={`pointer-events-none fixed start-0 top-0 z-[-2] h-screen w-full ${className}`}
    style={`
      background: linear-gradient(-45deg, 
        ${primaryColor}${Math.round(opacity * 255).toString(16).padStart(2, '0')}, 
        transparent 25%, 
        transparent 50%, 
        ${secondaryColor}${Math.round(opacity * 255).toString(16).padStart(2, '0')}, 
        transparent 75%, 
        transparent);
      background-size: 400% 400%;
      background-attachment: fixed;
      background-repeat: no-repeat;
      min-height: 100vh;
    `}
  />
)}

{type === 'gradient' && (
  <div
    class={`pointer-events-none fixed start-0 top-0 z-[-2] h-screen w-full ${className}`}
    style={`
      background: linear-gradient(
        135deg,
        ${primaryColor}${Math.round(opacity * 0.3 * 255).toString(16).padStart(2, '0')} 0%,
        ${secondaryColor}${Math.round(opacity * 0.2 * 255).toString(16).padStart(2, '0')} 25%,
        transparent 50%,
        ${primaryColor}${Math.round(opacity * 0.1 * 255).toString(16).padStart(2, '0')} 75%,
        ${secondaryColor}${Math.round(opacity * 0.3 * 255).toString(16).padStart(2, '0')} 100%
      );
      background-attachment: fixed;
      background-size: cover;
      background-repeat: no-repeat;
      min-height: 100vh;
    `}
  />
)}

 